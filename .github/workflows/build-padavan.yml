# 修改TNAME为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
name: Build Padavan

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
  # schedule:
  #   - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v4  # 使用最新版本

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -y
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python3-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
        # 清理缓存以节省空间
        sudo apt-get clean
        sudo rm -rf /var/lib/apt/lists/*

    - name: Clone source code
      env:
        KERNEL: 3.4
      run: |
        mkdir -p /opt/rt-n56u
        if [ "$KERNEL" = "4.4" ] ; then
          git clone --depth=1 https://github.com/MeIsReallyBa/padavan-4.4.git /opt/rt-n56u
        else
          git clone --depth=1 https://github.com/Peter-max1/rt-n56u.git /opt/rt-n56u
        fi
        # 增加超时和重试机制
        cd /opt/rt-n56u/toolchain-mipsel || exit 1
        for i in {1..3}; do
          sh dl_toolchain.sh && break || sleep 5
        done
        mkdir -p /opt/images/

    - name: Build Firmware
      env:
        TNAME: E8820V2
        KERNEL: 3.4
      run: |
        cd /opt/rt-n56u/trunk || exit 1
        
        # 检查配置文件是否存在
        if [ ! -f "configs/templates/$TNAME.config" ]; then
          echo "Error: configs/templates/$TNAME.config not found"
          exit 1
        fi
        
        # 复制配置文件
        cp -f "configs/templates/$TNAME.config" .config
        
        # 配置固件选项
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config
        
        ################################################################################################
        # 移除不需要的配置项
        ################################################################################################
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SSSERVER/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ADBYBY/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPC/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FRPS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_TUNSAFE/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SMARTDNS/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SRELAY/d' .config
        
        ######################################################################
        # 定义需要的功能（y=集成,n=忽略）
        ######################################################################
        if [ "$KERNEL" = "4.4" ]; then
          echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_XRAY=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_DDNSTO=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ALDRIVER=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=y" >> .config
        else
          echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_FRPC=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_FRPS=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_TUNSAFE=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_CADDY=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_WYY=y" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=n" >> .config
          echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config
        fi
        
        #########################################################################################
        # 开始构建
        #########################################################################################
        sudo ./clear_tree
        # 增加构建超时控制和输出详细日志
        sudo timeout 3600 ./build_firmware_modify "$TNAME" 0 || {
          echo "Build timed out or failed"
          exit 1
        }
        
        # 检查是否生成了固件文件
        if [ -z "$(ls -A images/*.trx 2>/dev/null)" ]; then
          echo "Error: No firmware files generated"
          exit 1
        fi
        
        sudo mv -f images/*.trx /opt/images/

    - name: Upload packages
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Padavan-packages
        path: /opt/images/
        if-no-files-found: warn  # 找不到文件时警告而不是失败
